import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import Navbar from '@/src/app/[locale]/components/Navbar/Navbar';
import { ThemeProvider } from '@/context/ThemeProvider';
import './globals.css';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { routing } from '@/src/i18n/routing';
import { notFound } from 'next/navigation';
import { getLocale } from 'next-intl/server';
const geistSans = Inter({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Shirin nazari',
  description: 'Generated by create next app',
};

export default async function localeLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  const localeRTL = await getLocale();
  const direction = localeRTL === 'en' ? 'ltr' : 'rtl';
  return (
    <html lang={locale} dir={direction}>
      <body className={`${geistSans.variable} dark:bg-dark-mode`}>
        <NextIntlClientProvider>
          <ThemeProvider>
            <Navbar />
            {children}
          </ThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
